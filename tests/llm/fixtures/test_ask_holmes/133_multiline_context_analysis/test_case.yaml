id: 133_multiline_context_analysis
name: Analyzing multi-line stack traces and context
description: |
  A service is experiencing failures where the actual root cause is only clear when
  viewing multiple lines of context. The exception itself says "Connection refused"
  but the lines before show it's trying to connect to a wrong host due to a
  configuration change. Single-line filtering would miss the real issue.

user_request: "The payment-gateway is failing with connection errors. Can you figure out what's wrong?"

tags:
  - logs
  - multiline
  - context
  - stack_trace
  - troubleshooting

before_test:
  - kubectl create namespace app-133 || true
  - kubectl apply -f ./deployment.yaml -n app-133
  - kubectl wait --for=condition=ready pod -l app=payment-gateway -n app-133 --timeout=60s || true

after_test:
  - kubectl delete namespace app-133 --force --grace-period=0 || true

expected_answer:
  must_contain:
    - "redis-prod-001"
    - "redis-dev-001"
    - "wrong environment"
  should_contain:
    - "configuration"
    - "development"
    - "production"
    - "CONFIG_ENV"
  must_not_contain:
    - "redis is down"
    - "network issue"
  reasoning: |
    Holmes should analyze the context around the "Connection refused" errors and notice
    that the service is trying to connect to redis-dev-001 (development) instead of
    redis-prod-001 (production), indicating a configuration issue where the wrong
    environment variables are loaded.
