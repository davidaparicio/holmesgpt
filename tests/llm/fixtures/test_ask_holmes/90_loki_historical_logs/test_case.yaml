user_prompt: "The payment-service in namespace-90 had intermittent failures yesterday between 2-4 PM. What was happening during that time?"
expected_output:
  - Payment service experienced database connection pool exhaustion
  - Logs show "connection pool timeout" errors during 14:00-16:00
  - Connection spike from payment-processor pod caused the issue
  - Pool size of 10 was insufficient for the load spike
tags:
  - hard
  - observability
  - loki
description: |
  This eval tests querying historical logs from Loki to diagnose a past incident.

  Setup:
  - Loki instance storing logs with proper timestamps
  - Payment service that had issues "yesterday" (24-48 hours ago)
  - Sidecar container pre-populates Loki with historical logs
  - Logs show connection pool exhaustion during specific time window

  Expected troubleshooting steps:
  1. Query Loki for payment-service logs from yesterday 2-4 PM
     Example: {namespace="namespace-90",pod=~"payment-service.*"} |= "error"
              (with time range: yesterday 14:00 to 16:00)
  2. Find pattern of "connection pool timeout" errors
  3. Look for logs just before the errors started
  4. See "Active connections: 10/10" warnings before timeouts
  5. Query payment-processor logs during same time
  6. Find spike in payment processing ("Processing payment" messages)
  7. Correlate the traffic spike with connection exhaustion
  8. Identify that connection pool size (10) was too small

  Key aspect: Must use Loki's time range queries to find historical data.
  The issue is only visible in logs from 24-48 hours ago, not current logs.
before_test: |
  kubectl create namespace namespace-90
  kubectl apply -f ./manifest.yaml -n namespace-90
  echo "Waiting for Loki to be ready..."
  kubectl wait --for=condition=ready pod -l app=loki -n namespace-90 --timeout=60s
  echo "Waiting for historical data population..."
  kubectl wait --for=condition=complete job/populate-historical-logs -n namespace-90 --timeout=120s
  echo "Historical logs populated. Starting services..."
  kubectl apply -f ./services.yaml -n namespace-90
  sleep 10
after_test: |
  kubectl delete -f ./services.yaml -n namespace-90 || true
  kubectl delete -f ./manifest.yaml -n namespace-90
  kubectl delete namespace namespace-90
