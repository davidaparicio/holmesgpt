name: prometheus/advanced-latency
description: Advanced Prometheus tools for latency and performance analysis
docs_url: https://docs.robusta.dev/master/configuration/holmesgpt/toolsets/prometheus-advanced.html
icon_url: https://upload.wikimedia.org/wikipedia/commons/3/38/Prometheus_software_logo.svg

tools:
  - name: analyze_metric_by_dimensions
    description: |
      Analyzes any metric broken down by its available label dimensions.
      Supports histogram, summary, gauge, and counter metrics.
      Automatically discovers available labels from the metric.
    parameters:
      metric_name:
        type: string
        required: true
        description: The metric name to analyze
      percentiles:
        type: array
        required: false
        description: For histogram/summary metrics - percentiles to calculate
        default: [0.5, 0.95, 0.99]
      group_by:
        type: array
        required: false
        description: Labels to group by (will be validated against available labels)
      filters:
        type: object
        required: false
        description: Label filters to apply as key-value pairs
      time_range:
        type: string
        required: false
        description: Time range for analysis (e.g., "5m", "1h", "24h")
        default: "1h"
      aggregation:
        type: string
        required: false
        description: Aggregation method (avg, sum, max, min, stddev)
        default: "avg"

  - name: find_top_metric_values
    description: |
      Finds the highest values for any metric, grouped by labels.
      Useful for identifying outliers, top consumers, or slowest operations.
    parameters:
      metric_name:
        type: string
        required: true
        description: The metric to analyze
      group_by_label:
        type: string
        required: true
        description: Label to group results by
      top_n:
        type: integer
        required: false
        description: Number of top entries to return
        default: 10
      percentile:
        type: number
        required: false
        description: For histogram/summary metrics - percentile to use
        default: 0.95
      min_threshold:
        type: number
        required: false
        description: Minimum value to include in results
        default: 0
      time_range:
        type: string
        required: false
        description: Time range for analysis
        default: "1h"

  - name: correlate_metrics
    description: |
      Correlates one metric with others to identify relationships.
      Helps identify bottlenecks and dependencies between metrics.
    parameters:
      primary_metric:
        type: string
        required: true
        description: The primary metric to analyze
      correlation_metrics:
        type: array
        required: true
        description: List of metrics to correlate with
      label_filters:
        type: object
        required: false
        description: Label filters to apply to all metrics
      correlation_method:
        type: string
        required: false
        description: Correlation method (pearson, spearman, kendall)
        default: "pearson"
      time_range:
        type: string
        required: false
        description: Time range for correlation analysis
        default: "1h"

  - name: analyze_metric_distribution
    description: |
      Analyzes the distribution of any metric to identify patterns.
      Detects bimodal distributions, outliers, and tail values.
    parameters:
      metric_name:
        type: string
        required: true
        description: The metric to analyze (histogram type recommended)
      buckets:
        type: array
        required: false
        description: For histogram metrics - custom buckets for analysis
      label_filters:
        type: object
        required: false
        description: Label filters to apply
      distribution_stats:
        type: array
        required: false
        description: Statistics to calculate (mean, median, stddev, skew, kurtosis)
        default: ["mean", "median", "stddev"]
      time_range:
        type: string
        required: false
        description: Time range for analysis
        default: "1h"

  - name: compare_metric_periods
    description: |
      Compares latency between two time periods to identify degradations.
      Useful for before/after deployment comparisons.
    parameters:
      metric_name:
        type: string
        required: true
        description: The metric to compare
      current_period:
        type: string
        required: false
        description: Current time period (e.g., "1h")
        default: "1h"
      comparison_period:
        type: string
        required: false
        description: Comparison period offset (e.g., "24h" for yesterday)
        default: "24h"
      group_by:
        type: array
        required: false
        description: Labels to group comparison by
      threshold_percent:
        type: number
        required: false
        description: Percentage change threshold to highlight
        default: 10

  - name: find_metric_outliers_with_trace_ids
    description: |
      Identifies outlier metric values and retrieves associated trace IDs if available.
      Links metrics to traces through exemplars or labels.
    parameters:
      metric_name:
        type: string
        required: true
        description: The metric to analyze
      threshold:
        type: number
        required: true
        description: Threshold value for outliers
      trace_id_label:
        type: string
        required: false
        description: Label containing trace ID (if available)
      comparison_operator:
        type: string
        required: false
        description: Operator for threshold comparison (>, <, >=, <=)
        default: ">"
      limit:
        type: integer
        required: false
        description: Maximum number of results to return
        default: 20
      time_range:
        type: string
        required: false
        description: Time range to search
        default: "1h"

  - name: analyze_metric_by_segments
    description: |
      Analyzes any metric grouped by specified label segments.
      Useful for comparing performance across different dimensions.
    parameters:
      metric_name:
        type: string
        required: true
        description: The metric to analyze
      segment_labels:
        type: array
        required: true
        description: Labels to segment analysis by
      comparison_threshold:
        type: number
        required: false
        description: Threshold value for comparison
      aggregation:
        type: string
        required: false
        description: How to aggregate within segments (avg, sum, max, min, p95)
        default: "avg"
      time_range:
        type: string
        required: false
        description: Time range for analysis
        default: "1h"

  - name: detect_metric_anomalies
    description: |
      Detects anomalous patterns in any metric using statistical analysis.
      Identifies sudden spikes, gradual degradations, and periodic patterns.
    parameters:
      metric_name:
        type: string
        required: true
        description: The metric to analyze
      sensitivity:
        type: number
        required: false
        description: Anomaly detection sensitivity (1-5, higher is more sensitive)
        default: 3
      lookback_window:
        type: string
        required: false
        description: Historical window for baseline (e.g., "7d")
        default: "7d"
      group_by:
        type: array
        required: false
        description: Labels to detect anomalies by

additional_instructions: |
  This toolset provides generic metric analysis capabilities without assuming specific metric names or labels.

  When investigating performance issues:

  1. First discover available metrics and their labels using prometheus/metrics list_available_metrics
  2. Use analyze_metric_by_dimensions to break down metrics by their actual labels
  3. Find outliers with find_top_metric_values using discovered label names
  4. Correlate different metrics to identify relationships
  5. Compare time periods to detect regressions
  6. Look for anomalies in metric patterns

  For histogram metrics:
  - Use histogram_quantile() for percentile calculations
  - The _bucket suffix contains the histogram data
  - Apply rate() before histogram_quantile()

  For summary metrics:
  - Quantiles are pre-calculated in labels
  - Check for quantile labels in the metric

  The tools work with any metric naming convention - always discover actual metric and label names first.
